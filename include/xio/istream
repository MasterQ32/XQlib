#ifndef XQLIB_ISTREAM_HPP
#define XQLIB_ISTREAM_HPP

#include <cstddef>
#include <array>
#include <vector>
#include <string>

namespace xio
{
	//! generic input stream
	struct istream
	{
		virtual ~istream();

		virtual ssize_t read_raw(void * data, size_t length) noexcept = 0;

		void read(void * data, size_t length);

		template<typename T>
		std::enable_if_t<std::is_trivial_v<T>, T> read()
		{
			T value;
			read(&value, sizeof value);
			return value;
		}

		template<typename T, size_t N>
		std::array<T, N> read()
		{
			std::array<T, N> array;
			for(size_t i = 0; i < N; i++)
				array[i] = read<T>();
			return array;
		}

		template<typename T>
		std::vector<T> read(size_t count)
		{
			std::vector<T> array(count);
			for(size_t i = 0; i < array.size(); i++)
				array[i] = read<T>();
			return array;
		}

		//! reads a line from the stream char by char.
		std::string read_line();
	};
}

#endif // ISTREAM_HPP
