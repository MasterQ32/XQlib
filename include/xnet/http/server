#ifndef XQLIB_SERVER_HPP
#define XQLIB_SERVER_HPP

#include "../socket"
#include "../socket_stream"
#include "../ip"

#include <string>
#include <memory>
#include <map>

namespace xnet::http
{
	struct http_request
	{
		std::shared_ptr<xnet::socket> socket;

		std::string method;
		std::string url;
		std::map<std::string, std::string> headers;

		http_request(std::shared_ptr<xnet::socket> sock);

		//! Returns a stream to the http content. Headers are already parsed.
		socket_istream get_stream();
	};

	struct http_response
	{
		std::shared_ptr<xnet::socket> socket;

		http_response(std::shared_ptr<xnet::socket> sock);

		int status_code;
		std::map<std::string, std::string> headers;

		//! Returns a stream to the http content. Headers will be written as soon
		//! as this function is called.
		socket_ostream get_stream();
	};

	struct server
	{
		xnet::socket socket;
		server();

		bool bind(endpoint const & ep);

		std::tuple<http_request, http_response> get_context();
	};
}

#endif // SERVER_HPP
